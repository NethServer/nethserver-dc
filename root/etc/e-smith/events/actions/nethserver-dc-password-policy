#!/usr/bin/perl

#
# Copyright (C) 2016 Nethesis srl
#
# ---
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License or more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
#

# Samba 4 can't set password policies for specific users.
# Password policies will be applied to all users

use strict;
use esmith::ConfigDB;

my $event = shift || die "Event name argument missing.";
my $userName = shift || '';
my $PassExpires = shift || 'yes';
my @users;

my $errors = 0;

my %conf = ();
my $db = esmith::ConfigDB->open_ro();

my $policy = $db->get('passwordstrength');
if($policy) {
    %conf = $policy->props();
} else {
    die "[ERROR] No passwordstrength configuration found!\n";
}

if ($userName) {
    my $ldapAccount = (split(/@/,$userName))[0];
    my $changeFlags = '';
    my $flags = '';

    # Read the current flag string from pdbedit output:
    open(my $ph, '-|', qw(nsdc-run -- /usr/bin/pdbedit -w -u), $ldapAccount);
    my $record = <$ph>;
    chomp($record);
    close($ph);

    $flags = (split ':', $record)[4];
    $flags =~ s/[^NDHLX\]\[]//g; # Clean up not supported flags

    $changeFlags = $flags;

    if($PassExpires eq 'no' && $flags !~ /X/) {
        $changeFlags =~ s/\]/X\]/;
    } elsif($PassExpires eq 'yes' && $flags =~ /X/) {
        $changeFlags =~ s/X//;
    }
    if($changeFlags ne $flags) {
        system(qw(nsdc-run -- /usr/bin/pdbedit -u), $ldapAccount, '-c', $changeFlags);
        if ($? != 0) {
            die("[ERROR] Failed to set flags $changeFlags on user $userName\n");
        }
    }
    exit(0);
}

my $min = 0;
my $max = 0;
if($conf{'PassExpires'} ne 'no') {
    $min = $conf{"MinPassAge"} || '0';
    $max = $conf{"MaxPassAge"} || '180';
}
my @domainOpts = ("--min-pwd-age=$min", "--max-pwd-age=$max");

if($conf{'Users'} eq 'strong') {
    push @domainOpts, qw(--complexity=on --history-length=default);
    system("/usr/bin/rm -f /var/lib/machines/nsdc/srv/password-policy-none");
} else {
    push @domainOpts, qw(--complexity=off --history-length=0);
    system("/usr/bin/touch /var/lib/machines/nsdc/srv/password-policy-none");
}

system(qw(nsdc-run -e -- /usr/bin/samba-tool domain passwordsettings set), @domainOpts);
if ($? != 0) {
    die("[ERROR] Failed to set domain password policy\n");
}

