#!/usr/bin/perl

#
# Copyright (C) 2016 Nethesis srl
#
# --- 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License or more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
#

# Samba 4 can't set password policies for specific users.
# Password policies will be applied to all users

use strict;
use esmith::ConfigDB;

my $event = shift || die "Event name argument missing.";
my $userName = shift || '';
my $PassExpires = shift || 'yes';
my @users;

my $errors = 0;

my %conf = ();
my $db = esmith::ConfigDB->open_ro();

my $policy = $db->get('passwordstrength');
if($policy) {
    %conf = $policy->props();
} else {
    die "[ERROR] No passwordstrength configuration found!\n";
}

my $scmd = "/usr/bin/nsdc-cmd /usr/bin/samba-tool";

if ($userName) {
    my $ldapAccount = (split(/@/,$userName))[0];
    my $expiryOpts = '';
    if($PassExpires eq 'no') {
        $expiryOpts = '--noexpiry';
    } elsif($PassExpires eq 'yes') {
        $expiryOpts = '--days=' . ($conf{"MaxPassAge"} || '180');
    }
    system("$scmd user setexpiry '$ldapAccount' $expiryOpts");
    if ($? != 0) {
        die("[ERROR] Faild to set expiry on user $userName\n");
    }
    exit(0);
}

my $min = 0;
my $max = 0;
if($conf{'PassExpires'} ne 'no') {
    $min = $conf{"MinPassAge"} || '0';
    $max = $conf{"MaxPassAge"} || '180';
}
my $domainOpts = qq(--min-pwd-age=$min --max-pwd-age=$max);

if($conf{'Users'} eq 'strong') {
    $domainOpts .= qq( --complexity=on --history-length=default);
} else {
    $domainOpts .= qq( --complexity=off --history-length=0);
}

system("$scmd domain passwordsettings set $domainOpts");
if ($? != 0) {
    die("[ERROR] Failed to set domain password policy\n");
}

